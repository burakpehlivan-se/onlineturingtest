import type { NextApiRequest, NextApiResponse } from 'next'

interface AIAnswerRequest {
  question: string
  difficulty: 'easy' | 'medium' | 'hard'
}

interface AIAnswerResponse {
  answer: string
  model: string
}

const DIFFICULTY_PROMPTS = {
  easy: 'Net, bilgilendirici, listeleme yaparak ve resmi bir dille cevapla. Maksimum 150 kelime.',
  medium:
    'Bir uzmanÄ±n blog yazÄ±sÄ± gibi cevapla. AnlaÅŸÄ±lÄ±r, akÄ±cÄ± ve bilgilendirici ol. Maksimum 200 kelime.',
  hard: 'Bir internet forumunda yazÄ±yormuÅŸ gibi cevap ver. Samimi ol, biraz kiÅŸisel gÃ¶rÃ¼ÅŸ katabilirsin. Maksimum 250 kelime.',
}

const SAMPLE_AI_ANSWERS = [
  {
    question: 'Yapay zeka nedir ve hangi alanlarda kullanÄ±lÄ±r?',
    answer:
      'Yapay zeka, insan benzeri zeka gÃ¶sterebilen bilgisayar sistemleridir. Makine Ã¶ÄŸrenmesi, derin Ã¶ÄŸrenme ve doÄŸal dil iÅŸleme gibi teknolojileri kullanarak, veri analizi, gÃ¶rÃ¼ntÃ¼ tanÄ±ma ve karar verme gibi gÃ¶revleri otomatik olarak gerÃ§ekleÅŸtirebilir. SaÄŸlÄ±k, finans, ulaÅŸtÄ±rma ve eÄŸitim gibi birÃ§ok alanda uygulanmaktadÄ±r.',
  },
  {
    question: 'Kuantum bilgisayarlar klasik bilgisayarlardan nasÄ±l farklÄ±dÄ±r?',
    answer:
      'Kuantum bilgisayarlar, klasik bilgisayarlardan temel olarak farklÄ±dÄ±r. Klasik bilgisayarlar 0 ve 1 (bit) kullanÄ±rken, kuantum bilgisayarlar kuantum bitleri (qubit) kullanÄ±r. Kubitler, sÃ¼perpozisyon ve dolanÄ±klÄ±k gibi kuantum mekaniksel Ã¶zellikleri sayesinde, aynÄ± anda birden fazla durumda olabilir. Bu, kuantum bilgisayarlarÄ± belirli problemleri Ã§Ã¶zmede Ã§ok daha hÄ±zlÄ± hale getirir.',
  },
  {
    question: 'Ä°klim deÄŸiÅŸikliÄŸinin ana nedenleri nelerdir?',
    answer:
      'Ä°klim deÄŸiÅŸikliÄŸinin ana nedenleri, insan faaliyetleri tarafÄ±ndan atmosfere salÄ±nan sera gazlarÄ±dÄ±r. Ã–zellikle karbondioksit (CO2), metan (CH4) ve azot oksit (N2O) gibi gazlar, gÃ¼neÅŸ Ä±ÅŸÄ±nlarÄ±nÄ±n geri yansÄ±masÄ±nÄ± engeller ve Ä±sÄ± tutar. Fosil yakÄ±tlarÄ±n yakÄ±lmasÄ±, endÃ¼stri, tarÄ±m ve ulaÅŸtÄ±rma bu gazlarÄ±n ana kaynaÄŸÄ±dÄ±r. OrmanlarÄ±n yok edilmesi de atmosferdeki CO2 seviyesini artÄ±rÄ±r.',
  },
]

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<AIAnswerResponse | { error: string }>
) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' })
  }

  try {
    const { question, difficulty } = req.body as AIAnswerRequest

    if (!question || !difficulty) {
      return res.status(400).json({ error: 'Question and difficulty are required' })
    }

    const apiKey = process.env.OPENROUTER_API_KEY
    const isValidApiKey = apiKey && !apiKey.includes('your_') && apiKey.length > 10

    if (!isValidApiKey) {
      console.log('â„¹ OPENROUTER_API_KEY tanÄ±mlanmamÄ±ÅŸ, Ã¶rnek cevap kullanÄ±lÄ±yor')
      const matchingAnswers = SAMPLE_AI_ANSWERS.filter((item) =>
        item.question.toLowerCase().includes(question.toLowerCase()) ||
        question.toLowerCase().includes(item.question.toLowerCase())
      )

      if (matchingAnswers.length > 0) {
        const selected = matchingAnswers[Math.floor(Math.random() * matchingAnswers.length)]
        console.log(`  âœ“ Ã–rnek cevap seÃ§ildi`)
        console.log(`  Cevap: "${selected.answer.substring(0, 80)}..."\n`)
        return res.status(200).json({
          answer: selected.answer,
          model: 'sample',
        })
      }

      const randomAnswer = SAMPLE_AI_ANSWERS[Math.floor(Math.random() * SAMPLE_AI_ANSWERS.length)]
      console.log(`  âœ“ Rastgele Ã¶rnek cevap seÃ§ildi`)
      console.log(`  Cevap: "${randomAnswer.answer.substring(0, 80)}..."\n`)
      return res.status(200).json({
        answer: randomAnswer.answer,
        model: 'sample',
      })
    }

    console.log(`\nğŸ¤– AI CEVAP ÃœRETÄ°MÄ°`)
    console.log(`  Soru: "${question}"`)
    console.log(`  Zorluk: ${difficulty.toUpperCase()}`)
    console.log(`  Talimat: "${DIFFICULTY_PROMPTS[difficulty]}"`)

    const prompt = `${DIFFICULTY_PROMPTS[difficulty]}\n\nSoru: ${question}\n\nCevap:`

    const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${apiKey}`,
        'HTTP-Referer': 'http://localhost:3000',
        'X-Title': 'Online Turing Test',
      },
      body: JSON.stringify({
        model: 'gpt-3.5-turbo',
        messages: [
          {
            role: 'system',
            content:
              'Sen bilgili ve yardÄ±mcÄ± bir asistansÄ±n. Sorulan sorulara doÄŸru, bilgilendirici ve uygun uzunlukta cevaplar ver.',
          },
          {
            role: 'user',
            content: prompt,
          },
        ],
        temperature: 0.7,
        max_tokens: 300,
      }),
    })

    if (!response.ok) {
      const error = await response.json()
      console.error(`  âœ— API HatasÄ±: ${error.error?.message || 'Unknown error'}`)
      return res.status(response.status).json({ error: error.error?.message || 'API request failed' })
    }

    const data = await response.json()

    if (!data.choices || !data.choices[0] || !data.choices[0].message) {
      console.error('  âœ— Beklenmeyen API yanÄ±tÄ±')
      return res.status(500).json({ error: 'Unexpected API response' })
    }

    const answer = data.choices[0].message.content.trim()
    const model = data.model || 'gpt-3.5-turbo'

    console.log(`  âœ“ BaÅŸarÄ±lÄ± (${model})`)
    console.log(`  Cevap: "${answer.substring(0, 80)}..."\n`)

    res.status(200).json({
      answer,
      model,
    })
  } catch (error) {
    console.error('AI answer generation error:', error)
    res.status(500).json({ error: 'Failed to generate AI answer' })
  }
}
